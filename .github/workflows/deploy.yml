name: Deploy

on: 
  repository_dispatch: 
    types: ["dispatch-main"]
      
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update package.json
        run: |
          cat package.json | jq ".version = \"$RELEASE_VERSION\"" | jq ".dbvtkVersion = \"$RELEASE_VERSION\"" > tmp
          mv tmp package.json
        env:
          RELEASE_VERSION: ${{ github.event.client_payload.version }}
      
      - name: Cache dist
        uses: actions/cache@v2
        with:
          path: dist/*
          key: ${{ runner.os }}-${{ github.event.client_payload.version }}

      - name: Package MacOS
        if: startsWith(matrix.os, 'macos')
        run: yarn --pure-lockfile && yarn dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DBPTK_UI_VERSION: ${{ github.event.client_payload.version }}
          FLOW: ${{ github.event.client_payload.flow }}

      - name: Package Linux & Windows
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          docker run --rm \
            --env FLOW="${FLOW}" \
            --env GITHUB_TOKEN="${GITHUB_TOKEN}" \
            --env DBPTK_UI_VERSION="${DBPTK_UI_VERSION}" \
            -v ${PWD}:/project \
            -v ~/.cache/electron:/root/.cache/electron \
            -v ~/.cache/electron-builder:/root/.cache/electron-builder \
            electronuserland/builder:wine \
            /bin/bash -c "apt-get update && apt-get install -y jq && yarn --link-duplicates --pure-lockfile && yarn dist-lw"
        env:
          DBPTK_UI_VERSION: ${{ github.event.client_payload.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FLOW: ${{ github.event.client_payload.flow }}

      - name: Set GitHub config
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          git config --local user.email "mguimaraes@keep.pt"
          git config --local user.name "Miguel Guimar√£es"
      
      - name: Run release script
        if: startsWith(matrix.os, 'ubuntu')
        run: ./scripts/release.sh $TAG
        env:
          TAG: ${{ github.event.client_payload.version }}
      
      - name: Push changes
        if: startsWith(matrix.os, 'ubuntu')
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  deploy:
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Cache dist
        uses: actions/cache@v2
        with:
          path: dist/*
          key: ${{ runner.os }}-${{ github.event.client_payload.version }}

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/dbptk-desktop-${{ github.event.client_payload.version }}.AppImage
            dist/dbptk-desktop-${{ github.event.client_payload.version }}.exe
            dist/dbptk-desktop-${{ github.event.client_payload.version }}.dmg
            dist/latest*
          name: Version ${{ github.event.client_payload.version }}
          tag_name: v${{ github.event.client_payload.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Snapcraft
        if: startsWith(matrix.os, 'ubuntu')
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.SNAP_TOKEN }}

      - name: Upload to snapcraft
        if: startsWith(matrix.os, 'ubuntu')
        run: snapcraft upload --release=stable dist/dbptk-desktop*.snap